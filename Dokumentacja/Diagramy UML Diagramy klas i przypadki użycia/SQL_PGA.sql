-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."Vehicle"
(
    "vehicleId" integer NOT NULL,
    equipment text,
    version text,
    purpose text,
    "totalTime" double precision,
    "totalDistance" double precision,
    "modelId" integer,
    CONSTRAINT br PRIMARY KEY ("vehicleId")
);

CREATE TABLE IF NOT EXISTS public."Brand"
(
    "brandId" integer NOT NULL,
    "brandName" text,
    PRIMARY KEY ("brandId")
);

CREATE TABLE IF NOT EXISTS public."Model"
(
    "modelId" integer NOT NULL,
    "modelName" text,
    "brandId" integer,
    PRIMARY KEY ("modelId")
);

CREATE TABLE IF NOT EXISTS public."OperationalRepairs"
(
    "repairId" integer NOT NULL,
    data date,
    type text,
    cost double precision,
    "vehicleId" integer,
    "employeeId" integer,
    PRIMARY KEY ("repairId")
);

CREATE TABLE IF NOT EXISTS public."ManageGiver"
(
    "manageId" integer NOT NULL,
    "vehicleId" integer,
    "carGiverId" integer,
    maintenance integer,
    PRIMARY KEY ("manageId")
);

CREATE TABLE IF NOT EXISTS public."Maintenance"
(
    "maintenanceId" integer NOT NULL,
    description text,
    date date,
    cost integer,
    PRIMARY KEY ("maintenanceId")
);

CREATE TABLE IF NOT EXISTS public."Employee"
(
    "employeeId" integer NOT NULL,
    name text,
    surname text,
    PRIMARY KEY ("employeeId")
);

CREATE TABLE IF NOT EXISTS public."Reservation"
(
    "reservationId" integer NOT NULL,
    "startTime" date,
    "endTime" date,
    "privateUsage" boolean,
    "employeeId" integer,
    "carGiverId" integer,
    PRIMARY KEY ("reservationId")
);

CREATE TABLE IF NOT EXISTS public."CostCalculation"
(
    "costId" integer NOT NULL,
    cost double precision,
    "rentId" integer,
    PRIMARY KEY ("costId")
);

CREATE TABLE IF NOT EXISTS public."Rent"
(
    "rentId" integer NOT NULL,
    distance double precision,
    cost double precision,
    "reservationId" integer,
    PRIMARY KEY ("rentId")
);

CREATE TABLE IF NOT EXISTS public."VehicleCarGiver"
(
    "giverId" integer NOT NULL,
    name text,
    surname text,
    PRIMARY KEY ("giverId")
);

CREATE TABLE IF NOT EXISTS public."Admin"
(
    "adminId" integer NOT NULL,
    name text,
    surname text,
    PRIMARY KEY ("adminId")
);

ALTER TABLE IF EXISTS public."Vehicle"
    ADD FOREIGN KEY ("modelId")
    REFERENCES public."Model" ("modelId") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Model"
    ADD CONSTRAINT "brandId" FOREIGN KEY ("brandId")
    REFERENCES public."Brand" ("brandId") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."OperationalRepairs"
    ADD FOREIGN KEY ("vehicleId")
    REFERENCES public."Vehicle" ("vehicleId") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."OperationalRepairs"
    ADD FOREIGN KEY ("employeeId")
    REFERENCES public."Employee" ("employeeId") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."ManageGiver"
    ADD FOREIGN KEY ("carGiverId")
    REFERENCES public."VehicleCarGiver" ("giverId") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."ManageGiver"
    ADD FOREIGN KEY (maintenance)
    REFERENCES public."Maintenance" ("maintenanceId") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."ManageGiver"
    ADD FOREIGN KEY ("vehicleId")
    REFERENCES public."Vehicle" ("vehicleId") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Reservation"
    ADD FOREIGN KEY ("employeeId")
    REFERENCES public."Employee" ("employeeId") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Reservation"
    ADD FOREIGN KEY ("carGiverId")
    REFERENCES public."VehicleCarGiver" ("giverId") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."CostCalculation"
    ADD FOREIGN KEY ("rentId")
    REFERENCES public."Rent" ("rentId") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Rent"
    ADD FOREIGN KEY ("reservationId")
    REFERENCES public."Reservation" ("reservationId") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;